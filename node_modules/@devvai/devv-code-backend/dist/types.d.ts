export interface User {
    projectId: string;
    uid: string;
    name: string;
    email: string;
    createdTime: number;
    lastLoginTime: number;
}
export interface AuthResponse {
    sid: string;
    user: User;
}
export type QueryOperator = 'EQ' | 'NE' | 'LT' | 'LE' | 'GT' | 'GE' | 'BEGINS_WITH' | 'BETWEEN';
export type QueryValue = string | number | boolean | [string | number, string | number];
export interface QueryCondition {
    operator: QueryOperator;
    value: QueryValue;
}
export interface GetItemsOptions {
    limit?: number;
    cursor?: string;
    sort?: string;
    order?: 'asc' | 'desc';
    query?: Record<string, string | number | boolean | QueryCondition>;
}
export interface GetItemsResponse {
    items: Record<string, any>[];
    nextCursor?: string;
    indexName?: string;
}
export type ItemData = Record<string, any>;
export interface ApiResponse {
    message: string;
}
export interface UploadFileRequest {
    file: File;
}
export interface UploadFileSuccessResponse {
    [key: string]: string | undefined;
    filename?: string;
    link?: string;
}
export interface ErrorResponse {
    errCode: number;
    errMsg: string;
}
export type UploadFileResponse = UploadFileSuccessResponse | ErrorResponse;
export interface EmailTag {
    name: string;
    value: string;
}
export interface EmailAttachment {
    filename: string;
    content?: number[];
    path?: string;
    content_type?: string;
}
export interface SendEmailOptions {
    from: string;
    to: string[];
    subject: string;
    bcc?: string[];
    cc?: string[];
    reply_to?: string;
    html?: string;
    text?: string;
    tags?: EmailTag[];
    attachments?: EmailAttachment[];
    headers?: Record<string, string>;
    scheduled_at?: string;
}
export interface EmailResponse {
    id: string;
}
